mutation CreateConversation {
    createConversation {
        conversation {
            ...ConversationFragment
        }
    }
}

mutation SendMessage($conversationId: UUID!, $content: SendMessageContentInput!, $clientId: UUID!) {
    sendMessage(conversationId: $conversationId, content: $content, clientId: $clientId) {
        message {
            ...MessageFragment
        }
    }
}

mutation DeleteMessage($messageId: UUID!) {
    deleteMessage(id: $messageId) {
        message {
            content {
                ...MessageContentFragment
            }
        }
    }
}

mutation MaskAsSeen($conversationId: UUID!) {
    markAsSeen(conversationId: $conversationId) {
        __typename
    }
}

mutation SetTyping($conversationId: UUID!, $isTyping: Boolean!) {
    setTyping(conversationId: $conversationId, isTyping: $isTyping) {
        __typename
    }
}

query Conversation($id: UUID!, $pageInfo: OpaqueCursorPage!) {
    conversation(id: $id) {
        conversation {
            ...ConversationFragment
            ...ConversationMessagesPageFragment
        }
    }
}

query ConversationList($pageInfo: OpaqueCursorPage!) {
    conversations(page: $pageInfo) {
        conversations {
            ...ConversationFragment
        }
        hasMore
        nextCursor
    }
}

subscription ConversationsEvents {
    conversations {
        event {
            ... on ConversationCreatedEvent {
                conversation {
                    ...ConversationFragment
                }
            }
            ... on ConversationUpdatedEvent {
                conversation {
                    ...ConversationFragment
                }
            }
            ... on ConversationDeletedEvent {
                conversationId
            }
        }
    }
}

subscription ConversationEvents($conversationId: UUID!) {
    conversation(id: $conversationId) {
        event {
            ... on MessageCreatedEvent {
                message {
                    ...MessageFragment
                }
            }
            ... on MessageUpdatedEvent {
                message {
                    ...MessageFragment
                }
            }
        }
    }
}

fragment ConversationFragment on Conversation {
    __typename
    id
    title
    description
    lastMessagePreview
    unreadMessageCount
    providers {
        ...ProviderInConversationFragment
    }
}

fragment ConversationMessagesPageFragment on Conversation {
    items(page: $pageInfo) {
        data {
            ...MessageFragment
        }
        hasMore
        nextCursor
    }
}

fragment MessageFragment on Message {
    __typename
    id
    author {
        ... on Provider {
            ...ProviderFragment
        }
        ... on Patient {
            ...PatientFragment
        }
    }
    content {
        ...MessageContentFragment
    }
    clientId
    conversation {
        id
    }
    createdAt
}

fragment MessageContentFragment on MessageContent {
    ... on TextMessageContent {
        ...TextMessageContentFragment
    }
    ... on ImageMessageContent {
        ...ImageMessageContentFragment
    }
    ... on DocumentMessageContent {
        ...DocumentMessageContentFragment
    }
    ... on DeletedMessageContent {
        ...DeletedMessageContentFragment
    }
}

fragment ProviderInConversationFragment on ProviderInConversation {
    id
    provider {
        ...ProviderFragment
    }
    typingAt
    seenUntil
}

fragment ProviderFragment on Provider {
    id
    avatarUrl {
        ...EphemeralUrlFragment
    }
}

fragment PatientFragment on Patient {
    id
}

fragment EphemeralUrlFragment on EphemeralUrl {
    expiresAt
    url
}

fragment TextMessageContentFragment on TextMessageContent {
    text
}

fragment ImageMessageContentFragment on ImageMessageContent {
    imageFileUpload {
        ...ImageFileUploadFragment
    }
}

fragment DocumentMessageContentFragment on DocumentMessageContent {
    title
    documentFileUpload {
        ...DocumentFileUploadFragment
    }
}

fragment DeletedMessageContentFragment on DeletedMessageContent {
    empty: _
}

fragment ImageFileUploadFragment on ImageFileUpload {
    id
    url {
        ...EphemeralUrlFragment
    }
    fileName
    mimeType
    width
    height
}

fragment DocumentFileUploadFragment on DocumentFileUpload {
    id
    url {
        ...EphemeralUrlFragment
    }
    fileName
    mimeType
    thumbnail {
        ...ImageFileUploadFragment
    }
}
